apiVersion: apps/v1
kind: Deployment
metadata:
  name: airflow-webserver
  namespace: data-lake
spec:
  replicas: 1
  selector:
    matchLabels:
      app: airflow-webserver
  template:
    metadata:
      labels:
        app: airflow-webserver
    spec:
      containers:
      - name: airflow-webserver
        image: apache/airflow:2.7.0
        ports:
        - containerPort: 8080
        envFrom:
        - configMapRef:
            name: airflow-config
        command: ["airflow", "webserver"]
        volumeMounts:
        - name: dags-volume
          mountPath: /opt/airflow/dags
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
      volumes:
      - name: dags-volume
        emptyDir: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: airflow-scheduler
  namespace: data-lake
spec:
  replicas: 1
  selector:
    matchLabels:
      app: airflow-scheduler
  template:
    metadata:
      labels:
        app: airflow-scheduler
    spec:
      containers:
      - name: airflow-scheduler
        image: apache/airflow:2.7.0
        envFrom:
        - configMapRef:
            name: airflow-config
        command: ["airflow", "scheduler"]
        volumeMounts:
        - name: dags-volume
          mountPath: /opt/airflow/dags
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
      volumes:
      - name: dags-volume
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: airflow-webserver-service
  namespace: data-lake
spec:
  selector:
    app: airflow-webserver
  ports:
  - port: 8080
    targetPort: 8080
  type: LoadBalancer
